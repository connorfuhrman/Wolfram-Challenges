(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     40940,        989]
NotebookOptionsPosition[     20988,        614]
NotebookOutlinePosition[     36319,        911]
CellTagsIndexPosition[     36249,        906]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pancake Scramble", "Title"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"THE CHALLENGE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellMargins->{{66, 0}, {-2, 37}}],

Cell["", "WCIntroDividerLine"],

Cell["\<\
There are many ways to scramble a string of text. For a pancake scramble, \
imagine each character of the string as a pancake in a stack. Think of the \
process as repeatedly flipping larger stacks of pancakes until you flip the \
entire stack. Write a function that outputs the pancake scramble of a string. \
\>", "Description"],

Cell[CellGroupData[{

Cell["More Details", "Section"],

Cell["\<\
Here is how to scramble a string. To be concrete, suppose the string is \
\"abcdef\" of length 6.\
\>", "Text"],

Cell["\<\
Start with the original string. Reverse the order of the first two \
characters: \"bacdef\".\
\>", "Text"],

Cell["\<\
Use the new string. Reverse the order of the first three characters: \"cabdef\
\".\
\>", "Text"],

Cell["\<\
Use the new string. Reverse the order of the first four characters: \
\"dbacef\".\
\>", "Text"],

Cell["\<\
Repeat this process until the final step, where you reverse the order of all \
six characters: \"ecabdf\", \"fdbace\".\
\>", "Text"],

Cell["\<\
You can think of this process as repeatedly flipping larger stacks of \
pancakes from the top until you flip the entire stack.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Function Should Do", "Section"],

Cell[TextData[{
 "Write a function called ",
 StyleBox["PancakeScramble", "InlineCode"],
 " that takes a string as input and outputs the pancake scramble of that \
string."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["PancakeScramble",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "\"\<abcdef\>\"", "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[1]:="],

Cell[BoxData["\<\"fdbace\"\>"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[1]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["PancakeScramble",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "\"\<pancake\>\"", "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[2]:="],

Cell[BoxData["\<\"eanpack\"\>"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["PancakeScramble",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "\"\<abcdefghijklmnopqrstuvwxyz\>\"", 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[3]:="],

Cell[BoxData["\<\"zxvtrpnljhfdbacegikmoqsuwy\"\>"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["PancakeScramble",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "\"\<nmolpkqjrishtgufvewdxcybza\>\"", 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[4]:="],

Cell[BoxData["\<\"abcdefghijklmnopqrstuvwxyz\"\>"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[4]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"SCRATCH AREA\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->GrayLevel[0.65],
  FrameMargins->{{13, 13}, {2, 5}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellGroupingRules->{"SectionGrouping", 0}],

Cell[BoxData[""], "WCIntroDividerLine",
 CellFrameColor->GrayLevel[0.65]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", " ", "=", " ", "\"\<abcdef\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"s1", "=", " ", 
  RowBox[{
   RowBox[{"StringReplacePart", "[", 
    RowBox[{
     RowBox[{"StringReverse", "@", 
      RowBox[{"StringTake", "[", 
       RowBox[{"s", ",", "2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "[", "s", "]"}]}]}], "Input",
 CellChangeTimes->{{3.750646310492873*^9, 3.750646360398756*^9}, {
  3.750646437945907*^9, 3.75064649820686*^9}, {3.750646699117134*^9, 
  3.750646699736002*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"62a2058c-6d93-487d-aa60-e21fd1bf19c0"],

Cell[BoxData["\<\"bacdef\"\>"], "Output",
 CellChangeTimes->{{3.750646316326132*^9, 3.7506463608572483`*^9}, {
   3.7506464387000303`*^9, 3.750646498603216*^9}, {3.750646700684684*^9, 
   3.750646729192675*^9}, 3.750646855805397*^9},
 CellLabel->
  "Out[466]=",ExpressionUUID->"0e484163-26d2-421a-9261-21099433fdb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", " ", "=", " ", 
  RowBox[{
   RowBox[{"StringReplacePart", "[", 
    RowBox[{
     RowBox[{"StringReverse", "@", 
      RowBox[{"StringTake", "[", 
       RowBox[{"s1", ",", "3"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "[", "s1", "]"}]}]], "Input",
 CellChangeTimes->{{3.750646702856648*^9, 3.750646710611227*^9}, {
  3.750646741505138*^9, 3.7506467427472687`*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"ebe1d568-2e27-4a81-bd6f-60505d069b08"],

Cell[BoxData["\<\"cabdef\"\>"], "Output",
 CellChangeTimes->{{3.750646711206068*^9, 3.750646743309229*^9}, 
   3.750646858287939*^9},
 CellLabel->
  "Out[467]=",ExpressionUUID->"eecced1e-027a-4818-ac96-43859799590f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringLength", "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.750646600371767*^9, 3.750646617637438*^9}},
 CellLabel->
  "In[449]:=",ExpressionUUID->"6a86d41f-ddaa-408f-8447-2ab480b6abe3"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.750646602007112*^9, 3.750646617956279*^9}},
 CellLabel->
  "Out[449]=",ExpressionUUID->"f93e4f72-3b20-458f-a24b-467d0570d338"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"op", "[", 
   RowBox[{"st_", ",", "i_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"StringReplacePart", "[", 
    RowBox[{
     RowBox[{"StringReverse", "@", 
      RowBox[{"StringTake", "[", 
       RowBox[{"st", ",", "i"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "i"}], "}"}]}], "]"}], "[", "st", "]"}]}]], "Input",
 CellChangeTimes->{{3.750646576506876*^9, 3.750646652110304*^9}, {
   3.750646828411398*^9, 3.750646850795774*^9}, {3.7506469001073837`*^9, 
   3.7506469349323187`*^9}, {3.750647129492923*^9, 3.750647142386093*^9}, 
   3.750647225702124*^9},
 CellLabel->
  "In[471]:=",ExpressionUUID->"7ad36052-5e2a-4b44-acd1-56880b0d1f8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "[", 
  RowBox[{"\"\<abcdef\>\"", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7506471436632338`*^9, 3.750647151644875*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"6be5fdb0-4d72-4449-9767-75293101c9aa"],

Cell[BoxData["\<\"bacdef\"\>"], "Output",
 CellChangeTimes->{3.750647151920878*^9},
 CellLabel->
  "Out[469]=",ExpressionUUID->"f629c605-693c-4104-b28f-ab414066aa88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{"op", ",", "s", ",", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", 
     RowBox[{"StringLength", "[", "s", "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.750647184266892*^9, 3.750647214798786*^9}, {
  3.750647280183888*^9, 3.750647287889183*^9}, {3.7506473848307734`*^9, 
  3.750647498380735*^9}},
 CellLabel->
  "In[478]:=",ExpressionUUID->"6d2a0b43-3c7b-44ab-8c85-f113b9f730a5"],

Cell[BoxData["\<\"fdbace\"\>"], "Output",
 CellChangeTimes->{3.750647463355772*^9, 3.7506474990669403`*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"163e0443-e6e8-4788-a1ab-23f71c7383e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PancakeScramble", "[", "\"\<abcdef\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.750647564340419*^9, 3.750647569959592*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"9f567d2f-3de4-4196-9335-abbaf704edb1"],

Cell[BoxData["\<\"fdbace\"\>"], "Output",
 CellChangeTimes->{3.750647570365286*^9},
 CellLabel->
  "Out[480]=",ExpressionUUID->"0db2462e-357b-4916-a3d5-484283c47071"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PancakeScramble", "[", "\"\<pancake\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.750647581861732*^9, 3.750647586530472*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"0b44dae6-91f5-41fd-801e-9a85fa14b757"],

Cell[BoxData["\<\"eanpack\"\>"], "Output",
 CellChangeTimes->{3.750647587428982*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"3a0fa64d-ded0-4b46-935b-ef09c7c9110c"]
}, Open  ]],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider"],

Cell[BoxData[""], "WCIntroDividerLine"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PancakeScramble", "[", "s_String", "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{"op", ",", "s", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"2", ",", 
       RowBox[{"StringLength", "[", "s", "]"}]}], "]"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"op", "[", 
    RowBox[{"st_", ",", "i_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"StringReplacePart", "[", 
     RowBox[{
      RowBox[{"StringReverse", "@", 
       RowBox[{"StringTake", "[", 
        RowBox[{"st", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "i"}], "}"}]}], "]"}], "[", "st", "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.750647520075159*^9, 3.750647524657426*^9}, {
  3.7506475589085007`*^9, 3.750647559720899*^9}},
 CellTags->"NoLabel",
 CellLabel->
  "In[479]:=",ExpressionUUID->"dbcb3e4a-f587-4b5b-8930-aab1351710d5"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[0.9961, 0.3098, 0.21569], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[0.9961, 0.3098, 0.21569], FrameStyle -> 
          RGBColor[0.9961, 0.3098, 0.21569], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm], 
      ImageSizeCache -> {112., {13., 19.}}], Appearance -> None, 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; (Off[
         MessageName[$CharacterEncoding, "utf8"]]; ((If[
          Not[
           TrueQ[
            WolframChallenges`$NotebookInitializedQ[
             Hash[{$SessionID, 
               Last[
                EvaluationNotebook[]]}]]]], 
          CloudGet[
           FileNameJoin[{
             CloudObject[
             "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "InitializeNotebook"}]][]]; (If[
           Or[$VersionNumber >= 11.1, 
            ChoiceDialog[
             StringJoin["Wolfram Challenges is designed for version ", 
              ToString[11.1], 
              " or later of the Wolfram System, and may not function properly \
with the older ", 
              "kernel you are using. Contact Wolfram Research \
(www.wolfram.com) for upgrade information."]]], 
           If[
            Not[
             StringQ[
              If[
               Not[$CloudConnected], 
               CloudConnect[], $WolframID]]], 
            MessageDialog[
            "Users must authenticate with the cloud in order to submit \
solutions."], WolframChallenges`$SubmissionTesting = False; Quiet[
              Quiet[If[
                 TrueQ[WolframChallenges`Common`$ActiveClearing], 
                 Quiet[
                  Unset[
                   Once["public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]]; Catch[
                 
                 Module[{CodeEquivalence`Utilities`Private`result$}, 
                  Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                  CodeEquivalence`Utilities`Private`result$], 
                 CodeEquivalence`Utilities`OnceUnlessFailed], 
               MessageName[CloudObject, "invuri"]], 
              MessageName[$CharacterEncoding, "utf8"]][
              Quiet[
               Quiet[If[
                  TrueQ[WolframChallenges`Common`$ActiveClearing], 
                  Quiet[
                   Unset[
                    Once["public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]]; Catch[
                  
                  Module[{CodeEquivalence`Utilities`Private`result$}, 
                   Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.210"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                   CodeEquivalence`Utilities`Private`result$], 
                  CodeEquivalence`Utilities`OnceUnlessFailed], 
                MessageName[CloudObject, "invuri"]], 
               MessageName[$CharacterEncoding, "utf8"]][
               CloudObject[
               "https://www.wolframcloud.com/objects/wolframchallenges/public/\
api/check"], {"PancakeScramble"}, "public/pub/p-7c5a9e0faa9a9356"]]]]; 
         Null))& )[]); 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Evaluator -> Automatic, Method -> "Queued"], 
    DynamicModuleValues :> {}, 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}],
   TemplateBox[{10}, "Spacer1"],DynamicBox[
    ToBoxes[
     Refresh[Off[
        MessageName[$CharacterEncoding, "utf8"]]; If[
        Not[
         TrueQ[$CloudConnected]], 
        Column[{
          Row[{
            Text[
             Style[
             "Note: ", "SigninText", FontWeight -> "DemiBold", Background -> 
              None]], 
            Text[
             Button[
              
              PaneSelector[{
               False -> "Sign into the Wolfram Cloud", True -> 
                "Sign into the Wolfram Cloud"}, 
               Dynamic[
                CurrentValue["MouseOver"], 
                ImageSizeCache -> {48., {1., 12.}}], 
               BaseStyle -> {"SigninText", 
                 RGBColor["#36b1bf"]}, FrameMargins -> 0, ImageSize -> 
               Automatic], 
              CloudConnect[], Appearance -> None, Evaluator -> Automatic, 
              Method -> "Queued"]], 
            Text[
             Style[
             " to save your work on ", "SigninText", Background -> None]]}], 
          Text[
           Style[
           "Challenges and keep track of progress.", "SigninText", Background -> 
            None]]}, Alignment -> Left, Spacings -> 0], 
        Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow",ExpressionUUID->"ba0ecb10-664d-40b0-988e-\
e6370169c7b3"]
},
WindowSize->{1075, 755},
WindowMargins->{{Automatic, 49}, {Automatic, 50}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BoxID -> 
              "{\"type\":\"Image\",\"message\":\"SizeLimitReached\",\"\
imageData\":{\"imageSource\":\"data:image/png;base64,\
iVBORw0KGgoAAAANSUhEUgAAAB4AAAAdCAYAAAC9pNwMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAA\
AOxAAADsQBlSsOGwAABL5JREFUSIm1l2mIllUUx393Rs1sUUizKNFSTPODhbbYouRMtmglWGhZQYlt\
QmL0oUUliEpbRLRMKwk0W6XUD1k2ViSCGmkoWplLWDqU0zK5TGYzvz7c8+LTOONMUAdenvvcc885/\
3vP/57zvNAKUTur96vt1DvUfgVdT3Wc2l69Rz2jNT7btBBwDPATMBw4D9gDTAKmAZtjWV9gIlAGDAW\
GqM8AA1NKL7UGRDHgyfE8oD6r3quuU0cfw+bKWDNJnarWxXyn1gYdoFarSV2kblev+RegL1W3qkvi/\
Xu1ovG6po76WuA04GlgQ0ppbMFpW+\
A64AogFXxsBN5OKdWklFYDvdX71OnAmcAYYGUxSCo4HUnOUy3wEVAPTCjlSZ0A9Azd8TFuC+\
wCqoFBwCnA1JTSPvUmYFEAK3Gl91F5j+P5Vj1dnaz2jPkO6jz1GnWG+pu6XH3DI/\
KnulQdor6qnhO23dTH1B7qBvX7pnKzqeCkWm0TeZ6rDla3hP67uDaT432W2hDjWnWUOl/\
tqparO9XDod/eVOCr1Tp1l1oZc+PVa9WvCrubpP6uzlSnqJXqrwX9frVCfSV8XKRuUw+\
pt5TilakD1VXAGqAP8EJKqUptDwyM3PWJ9T8Ah4GTgMsAgduCFyU5AZgOrFIvTimtBeYC/\
YFl6gq1AnV0IF2v7lG3BtLh6sjYXUkeUL+J8V+x+3nmK9dYKtU54WuDWqN+\
FrqJZcBq4CBwPnA68GEgHwDsj90BfAJ0BXrHezlwN/\
B82DeWYcCfMX6HzPjLgTrgfcwkukBdEnk7MVBOU28NhIfUEQWSlOSwuttMqLWNdO+\
oT4av9upz6jIz88vLgO3kGvs4cGfslMifMX4DGAy8BNTEXD1wb8wtABYDTwANoW/\
gSJ3oE2tnAf2AHUReS2xUHRwoH1WHxm57ma/Yk+rNTeSzJFWh36w+pc4OX/\
1DfzCeNWXkzlIfbPwU2BsoPwc6A/\
OBXuQyuiXGM4CFsX5b5A2gArgIWA98XDixfcBScsVrAKakQNQLOBc4BLxFJtBv5GtwF5lAdwMryGXy\
BOBAgJsKjCMTrCGOchDwOvmKfgd8GxusBXallDahlgWx5qjvxlGMC0Bjg1QfNnO0DeZ2OL4w94t6uf\
pi+BgR85+qsyNWOaEs1l3V683lMpnrc4W6ppngX5tL4wvqXvUq9TWjD8d7UaooidoxAqyL50J1ceja\
mT8GbjYXkB+bCP5IrBsctt3C9mX1A3Oj+DzAdaZA9xKAMqAT+cIPBQaklNaH7kbganIhqQa6RL5/\
AtqFbjcwM6VUp/YNMn5BLia1KaX6UqxiP+\
4A7AROLWAZTr6bD6aUVqptgEuAiwNgAv4gfwisTCn9rl4YZHyIfzb/\
GqBHSukAjSWIUm0mTZV6Soz3qd2PMjjavqu5Xzeop5krVb25To9qyTipbeM3JICoPtyKwLfH2p/\
NTeI4o6+3ZFtycEYwtCjL1FOPYdMxyFSUX5s7qWaRxNFMAk4mf2d9SSbQWeSKNZ9cMG4jV6y9wHLgb\
DI36oA5KaWFrdptSxK5e9PcY1er76k9/hPnzQTsry5Qd5g/ebqrXcx/bTaai9Cg/\
yNwpXqD2q4JXbk6TB3fWn9/A9izhAbbZ9AzAAAAAElFTkSuQmCC\",\"boundingBox\":{\"\
width\":30,\"height\":29,\"baseline\":19}},\"plotRange\":[0,1,0,1]}", 
              DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
              Magnification[0.5], ImageSizeRaw -> {60, 58}, 
              PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", ShowStringCharacters -> False, 
              FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
              "Normal", FontColor -> GrayLevel[1]]}}, AutoDelete -> False, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Appearance -> None, ButtonFunction :> 
         SystemOpen["http://challenges.wolfram.com/"], Evaluator -> Automatic,
          Method -> "Preemptive"]}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, GeneratedCell -> True, 
   CellAutoOverwrite -> True, CellFrameMargins -> {{60, 0}, {4, 6}}, 
   CellFrameColor -> RGBColor[0.9961, 0.3098, 0.21569], ShowStringCharacters -> 
   False, Background -> RGBColor[0.9961, 0.3098, 0.21569]], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
TaggingRules->{
 "WolframChallengesInternal" -> 
  Association[
   "PacletVersion" -> "2.17.210", "FrameworkVersion" -> "public-2.17.210", 
    "PacletBuildDate" -> 
    DateObject[{2018, 4, 12, 20, 30, 25.3758638`9.156995755624544}, "Instant",
       "Gregorian", 0.], "NotebookBuildDate" -> 
    DateObject[{2018, 4, 16, 22, 19, 0.765723`6.636646681340826}, "Instant", 
      "Gregorian", 0.], "Hash" -> "7c5a9e0faa9a9356", "Key" -> 
    "public/pub/p-7c5a9e0faa9a9356", "CheckerAPI" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/api/\
check"], "SearchNames" -> {"PancakeScramble"}, "Status" -> "Published", 
    "Source" -> CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/pub/p-\
7c5a9e0faa9a9356"], "ReviewNotebook" -> False]},
ShowAutoSpellCheck->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> False, 
    CellMargins -> {{66, 30}, {Inherited, 35}}, Deployed -> True, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 17, 
    FontWeight -> "DemiBold", FontColor -> Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 16], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["Notebook"], ShowAutoSpellCheck -> False]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "NoLabel"->{
  Cell[10776, 385, 876, 25, 61, "Input",ExpressionUUID->"dbcb3e4a-f587-4b5b-8930-aab1351710d5",
   CellTags->"NoLabel"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"NoLabel", 36104, 900}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 94, "Title",ExpressionUUID->"cff5b8b2-ebac-4e2c-bbb8-60ecd6ba261c"],
Cell[616, 24, 633, 20, 68, "WCIntroDivider",ExpressionUUID->"5dad3731-a113-4c87-b84a-adaa1a5fced9"],
Cell[1252, 46, 30, 0, 25, "WCIntroDividerLine",ExpressionUUID->"0dc68bdc-fcbc-49f2-b2bf-cc5873cf7554"],
Cell[1285, 48, 340, 5, 99, "Description",ExpressionUUID->"3bb0aa2b-e9a1-463c-81b5-03adbcbf6a07"],
Cell[CellGroupData[{
Cell[1650, 57, 31, 0, 72, "Section",ExpressionUUID->"ffaea3d5-7029-42e4-b51f-1eb4d3d20497"],
Cell[1684, 59, 121, 3, 29, "Text",ExpressionUUID->"35cd0dea-4117-4ae0-8a38-b6eb4b8a27c7"],
Cell[1808, 64, 116, 3, 29, "Text",ExpressionUUID->"f8e90718-fd46-4040-9fc5-ccdcaec30f25"],
Cell[1927, 69, 106, 3, 29, "Text",ExpressionUUID->"807741ee-daa4-4cc7-8b75-f2952fd76295"],
Cell[2036, 74, 105, 3, 29, "Text",ExpressionUUID->"88395156-47b3-4dfb-9994-dc1696ed63b6"],
Cell[2144, 79, 142, 3, 29, "Text",ExpressionUUID->"db124582-517e-4995-b544-59f1a2034a28"],
Cell[2289, 84, 150, 3, 29, "Text",ExpressionUUID->"72220c22-6ca1-458a-a4d1-0951f890228d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2476, 92, 47, 0, 72, "Section",ExpressionUUID->"c9e7c544-2a86-45e9-b093-8028b4d9139a"],
Cell[2526, 94, 184, 5, 29, "Text",ExpressionUUID->"176d2ff0-a91b-4490-84f5-ad38eb7e32e3"],
Cell[CellGroupData[{
Cell[2735, 103, 251, 9, 32, "Input",ExpressionUUID->"960879ae-c5bd-4978-b2e4-527c15d8ff38",
 Evaluatable->False],
Cell[2989, 114, 108, 3, 36, "Output",ExpressionUUID->"a798eed8-5654-4152-9d1e-7306b3ec61e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3146, 123, 35, 0, 72, "Subsection",ExpressionUUID->"73fa242c-7a12-4c9b-9230-151c17ce1138"],
Cell[CellGroupData[{
Cell[3206, 127, 252, 9, 32, "Input",ExpressionUUID->"01788a41-a75a-440f-940f-850ca03e36e8",
 Evaluatable->False],
Cell[3461, 138, 109, 3, 36, "Output",ExpressionUUID->"3ffc74da-2592-418a-bf79-4e6e5ae0cb22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3607, 146, 274, 10, 32, "Input",ExpressionUUID->"58fd1fb5-5888-41eb-9043-86b538fce52d",
 Evaluatable->False],
Cell[3884, 158, 128, 3, 36, "Output",ExpressionUUID->"20e6e3e1-1dc3-42c7-a2aa-45cfe7367c54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4049, 166, 274, 10, 32, "Input",ExpressionUUID->"1168931c-a829-4bbe-ad53-fd5702137156",
 Evaluatable->False],
Cell[4326, 178, 128, 3, 36, "Output",ExpressionUUID->"b7c591d1-ebde-43c8-8650-42e9e7d55b6d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4515, 188, 623, 20, 63, "WCIntroDivider",ExpressionUUID->"7de6b1ef-0d9f-473d-99c7-e0e5a62f335a",
 CellGroupingRules->{"SectionGrouping", 0}],
Cell[5141, 210, 73, 1, 44, "WCIntroDividerLine",ExpressionUUID->"04580b82-7363-4a89-91fb-786227f7e99e"],
Cell[CellGroupData[{
Cell[5239, 215, 655, 17, 61, "Input",ExpressionUUID->"62a2058c-6d93-487d-aa60-e21fd1bf19c0"],
Cell[5897, 234, 316, 5, 38, "Output",ExpressionUUID->"0e484163-26d2-421a-9261-21099433fdb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6250, 244, 520, 13, 34, "Input",ExpressionUUID->"ebe1d568-2e27-4a81-bd6f-60505d069b08"],
Cell[6773, 259, 216, 4, 38, "Output",ExpressionUUID->"eecced1e-027a-4818-ac96-43859799590f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7026, 268, 214, 4, 34, "Input",ExpressionUUID->"6a86d41f-ddaa-408f-8447-2ab480b6abe3"],
Cell[7243, 274, 177, 3, 38, "Output",ExpressionUUID->"f93e4f72-3b20-458f-a24b-467d0570d338"]
}, Open  ]],
Cell[7435, 280, 696, 17, 34, "Input",ExpressionUUID->"7ad36052-5e2a-4b44-acd1-56880b0d1f8b"],
Cell[CellGroupData[{
Cell[8156, 301, 242, 5, 34, "Input",ExpressionUUID->"6be5fdb0-4d72-4449-9767-75293101c9aa"],
Cell[8401, 308, 166, 3, 38, "Output",ExpressionUUID->"f629c605-693c-4104-b28f-ab414066aa88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8604, 316, 440, 10, 34, "Input",ExpressionUUID->"6d2a0b43-3c7b-44ab-8c85-f113b9f730a5"],
Cell[9047, 328, 190, 3, 38, "Output",ExpressionUUID->"163e0443-e6e8-4788-a1ab-23f71c7383e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9274, 336, 230, 4, 34, "Input",ExpressionUUID->"9f567d2f-3de4-4196-9335-abbaf704edb1"],
Cell[9507, 342, 166, 3, 38, "Output",ExpressionUUID->"0db2462e-357b-4916-a3d5-484283c47071"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9710, 350, 231, 4, 34, "Input",ExpressionUUID->"0b44dae6-91f5-41fd-801e-9a85fa14b757"],
Cell[9944, 356, 167, 3, 38, "Output",ExpressionUUID->"3a0fa64d-ded0-4b46-935b-ef09c7c9110c"]
}, Open  ]],
Cell[10126, 362, 605, 19, 66, "WCIntroDivider",ExpressionUUID->"f34ccf11-441d-49d7-870a-c5d10859c422"],
Cell[10734, 383, 39, 0, 44, "WCIntroDividerLine",ExpressionUUID->"de8a85fe-3c34-4fdb-92cb-7d893e021eb8"],
Cell[10776, 385, 876, 25, 61, "Input",ExpressionUUID->"dbcb3e4a-f587-4b5b-8930-aab1351710d5",
 CellTags->"NoLabel"]
}, Open  ]],
Cell[11667, 413, 9317, 199, 101, "SubmitRow",ExpressionUUID->"ba0ecb10-664d-40b0-988e-e6370169c7b3"]
}
]
*)

